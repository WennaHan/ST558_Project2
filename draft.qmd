---
title: "draft"
format: html
editor: visual
---


# For this project, I wrote functions to interact with the crypto data of the CoinGecko API. 

## Started in 2014, **CoinGecko** is the world's largest independent crypto data aggregator that is integrated with more than 900 crypto exchanges and lists more than 12,000 coins. CoinGecko API offers the most comprehensive and reliable crypto market data through RESTful JSON endpoints.

### First, contact the CoinGecko API and return all cryptocurrencies data to help understand the available data and the IDs required for querying specific data. This function returns a data.frame containing the id, symbol, and name of 14879 cryptocurrencies. 
```{r}
# Load necessary libraries
library(httr)
library(jsonlite)
library(dplyr)
library(tidyr)
library(knitr)
library(ggplot2)

# Define the Base URL (CoinGecko API, no Key required)
base_url <- 'https://api.coingecko.com/api/v3/'

# Function to Get List of All Cryptocurrencies
get_all_cryptocurrencies <- function() {
  endpoint <- paste0(base_url, 'coins/list')
  
  response <- GET(endpoint)
  data <- fromJSON(content(response, as = "text"))
  df <- as.data.frame(data)
  
  return(df)
}

# Get the list of all available cryptocurrencies
crypto_list <- get_all_cryptocurrencies()

# View the data structure and first few rows of the list
str(crypto_list)
head(crypto_list)
```

### Second, querying different API endpoints. One queries the current market data for specific cryptocurrencies. Another queries the historical market data for a specific cryptocurrency.

### Endpoint 1: Current Market Data: Function to Get Current Market Data for Specific Cryptocurrencies. 
Users can modify three things:\
1) crypto_ids - List of cryptocurrencies to retrieve data for.\
2) vs_currency - Currency to compare against.\
3) order - Order of the results.
```{r}
# Create a function to get current market data for specific cryptocurrencies, allowing customization of three query parameters - crypto_ids, vs_currency, and order.
# The default cryptocurrencies are the three popular ones - bitcoin, ethereum, and ripple.
# The default comparing currency is US dollar.
# The default order is by market capitalization (market_cap_desc).
get_current_crypto_data <- function(crypto_ids = c('bitcoin', 'ethereum', 'ripple'),
                                    vs_currency = 'usd',
                                    order = 'market_cap_desc') {
  endpoint <- paste0(base_url, 'coins/markets')
  params <- list(vs_currency = vs_currency,
                 ids = paste(crypto_ids, collapse = ','),
                 order = order)
  
  response <- GET(endpoint, query = params)
  data <- fromJSON(content(response, as = "text"), flatten = TRUE)
  df <- as.data.frame(data)
  
  return(df)
}

# Get current market data for bitcoin, ethereum, and ripple.
crypto_data <- get_current_crypto_data(c('bitcoin', 'ethereum', 'ripple'), 
                                       vs_currency = 'usd', 
                                       order = 'market_cap_desc')

# View the first few rows of the data
head(crypto_data)
```

### Endpoint 2: Function to Get Historical Market Data for a Cryptocurrency
Users can modify three things:\
1) crypto_ids - List of cryptocurrencies to retrieve data for.\
2) vs_currency - Currency to compare against.\
3) days - Number of days of historical data.
```{r}
# Create a function to get historical market data for a specific cryptocurrency, allowing customization of the cryptocurrency ID and the number of days of historical data.
# The default cryptocurrency is bitcoin.
# The default comparing currency is US dollar.
# The default the number of days of historical data is 30 days.
get_historical_market_data <- function(crypto_id = 'bitcoin', 
                                       vs_currency = 'usd', 
                                       days = 30) {
  endpoint <- paste0(base_url, 'coins/', crypto_id, '/market_chart')
  params <- list( vs_currency = vs_currency,
                  days = days)
  
  response <- GET(endpoint, query = params)
  data <- fromJSON(content(response, as = "text"), flatten = TRUE)
  
  # Extracts prices and volumes, converts timestamps, and merges them into a single data frame.
  prices <- data$prices
  df_prices <- data.frame(timestamp = as.POSIXct(prices[, 1] / 1000, 
                                                 origin = '1970-01-01'), 
                          price = prices[, 2])
  
  volumes <- data$total_volumes
  df_volumes <- data.frame(timestamp = as.POSIXct(volumes[, 1] / 1000, 
                                                  origin = '1970-01-01'), 
                           volume = volumes[, 2])
  
  market_data <- merge(df_prices, df_volumes, by = 'timestamp')
  colnames(market_data) <- c('timestamp', 'price', 'volume')
  
  return(market_data)
}

# Get historical market data for Bitcoin for the last 30 days
historical_data <- get_historical_market_data('bitcoin', 'usd', 30)

# View the first few rows of the historical data
head(historical_data)
```

### Third, summarize data!
```{r}
# Contingency table: count of cryptocurrencies by market cap rank
#contingency_table <- table(crypto_data$market_cap_rank)
#print(contingency_table)

# Example contingency table: count of cryptocurrencies by market cap rank
contingency_table <- crypto_data |>
  mutate(market_cap_rank = as.factor(market_cap_rank)) |>
  count(market_cap_rank, sort = TRUE) |>
  kable()
contingency_table
```



